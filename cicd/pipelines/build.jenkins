#!/usr/bin/env groovy

def label = "build-jenkins-operator-${UUID.randomUUID().toString()}"
def home = "/home/jenkins"
def workspace = "${home}/workspace/build-jenkins-operator"
def workdir = "${workspace}/src/github.com/jenkinsci/kubernetes-operator/"

podTemplate(label: label,
        containers: [
                containerTemplate(
			name: 'jnlp',
			image: 'jenkins/jnlp-slave:alpine',
			envVars: [
				envVar(key: 'http_proxy', value: 'proxygate2.nic.nec.co.jp'),
				envVar(key: 'HTTP_PROXY', value: 'proxygate2.nic.nec.co.jp'),
				envVar(key: 'https_proxy', value: 'proxygate2.nic.nec.co.jp'),
				envVar(key: 'HTTPS_PROXY', value: 'proxygate2.nic.nec.co.jp'),
			]
		),
                containerTemplate(
			name: 'go',
			image: 'golang:1-alpine',
			command: 'cat', 
			ttyEnabled: true,
                        envVars: [
                                envVar(key: 'http_proxy', value: 'proxygate2.nic.nec.co.jp'),
                                envVar(key: 'HTTP_PROXY', value: 'proxygate2.nic.nec.co.jp'),
                                envVar(key: 'https_proxy', value: 'proxygate2.nic.nec.co.jp'),
                                envVar(key: 'HTTPS_PROXY', value: 'proxygate2.nic.nec.co.jp'),
                        ]
		),
        ]) {

    node(label) {
        dir(workdir) {
            stage('Init') {
                timeout(time: 3, unit: 'MINUTES') {
                    checkout scm
                }
                container('go') {
                    sh 'apk --no-cache --update add make git gcc libc-dev'
                }
            }

            stage('Build') {
                container('go') {
                    sh 'make build'
                }
            }
        }
    }
}
